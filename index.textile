---
layout: default
title: A modern approach to remote javascript
---

Rbjs is a ruby DSL that translates 1-to-1 into Javascript.

With Rbjs you can keep your javascript server-side. It saves you from the hazzle of dealing with response handlers and all the fiddly stuff. It is best suited to add some ajax to traditional multi-page apps. If you are planning to write a sophisticated rich client application, use a client library like backbone.

h2(#example).  Show me an example

Sure. This example renders an input box. After entering a message and clicking submit, the message partial is rendered and appended to the list of messages. In addition, the flash message gets updated.

h3. Variation 1

{% highlight erb %}
# in views/messages/index.html.erb
<%= form_for(Message.new, :remote => true) do |f| %>
  <%= f.text_field :text %>  
  <%= f.submit %>
<% end %>
{% endhighlight %}

{% highlight ruby %}
# in controllers/messages_controller.rb
# POST /messages
def create
  @message = Message.create(params[:message])
  render :js do
    jQuery(render @message).appendTo('#messages').fadeIn(1000)
    jQuery('#flash').html(t 'flash.message.created').show!
  end
end
{% endhighlight %}

As an experienced and disciplined Rails developer you might want to go ahead and extract the render call into a template and wrap everything in a _respond_to_ block for graceful degradation. You can do that, too.

h3. Variation 2

{% highlight ruby %}
# in controllers/messages_controller.rb
# POST /messages
# POST /messages.json
def create
  @message = Message.create(params[:message])
  respond_to do |format|
    format.html { redirect_to :back, notice: t('flash.message.created') }
    format.json { render json: @message, status: :created, location: @message }
    format.js
  end
end

# in views/messages/create.js.rbjs
jQuery(render @message).appendTo('#messages').fadeIn(1000)
jQuery('#flash').html(t 'flash.message.created').show!
{% endhighlight %}

There is no simpler way to combine a RESTful interface with ajax.

Find more examples in the "quick start guide":quick_start.html

h2(#uhm). Uhm...

Wait. Isn't rjs considered obtrusive?

The answer is a clear yes for data-driven, javascript-heavy applications. Good and popular choices for these applications are "sammy":http://sammyjs.org/ and "backbone":http://documentcloud.github.com/backbone/. Rbjs is targeted at traditional applications with some ajax thrown in for good measure. Keep simple stuff simple (and make it even simpler).

h2(#people).  What people* say

"Pragmatic Developer":http://www.google.com:

bq. Rbjs lets me prototype my ajax actions very quickly. I don't have to think about dealing with JSON response handlers. It's making my life easier.

"Lazy Developer":http://www.google.com:

bq. In the days of sophisticated client-side libraries like Backbone.js one easily forgets about good old rjs for the simple stuff. I don't always want to build a full-fledged MVC app on the client. With Rbjs I can keep my javascript on the server and my browser stays logic-less.

"Clever Developer":http://www.google.com:

bq. It's so nice to have Rbjs around. It's like having a friend with superpowers. Although I work on a javascript-heavy client, I like to fall back to rjs for the parts of my app that aren't covered by the client's logic (yet).

"Crazy Developer":http://www.google.com:

bq. When does the narwhal bacon?

h2(#features). Features

* Stuff

So let's "get started":quick_start.html.


h2(#news).  What's New

New in Rbjs 0.10.3 - 0.10.6:

* Now supporting nested render calls
* Adding extra semicolons to rendered javascript
* Multiple member calls on the same local variable now render correctly (see multiple_calls_to_local_expression spec for details).
* Fix for malformed javascript when using << with a string that contains exclamation marks

New in Rbjs 0.10.2:

* Integration with modular Sinatra Apps

New in Rbjs 0.10.1:

* Sinatra support through Tilt

New in Rbjs 0.9.15:

* Test suite included in repostory
* Javascript translation of regular expressions

New in Rbjs 0.9.14:

* Javascript translation of constants

New in Rbjs 0.9.13:

* First public release


h2(#notices).  Credits & Notices

"prototype-rails":https://github.com/rails/prototype-rails, the famous rjs library.

"ColorCons":http://www.mouserunner.com/Spheres_ColoCons1_Free_Icons.html, copyright of Ken Saunders.  "DejaVu fonts":http://dejavu.sourceforge.net, copyright of Bitstream, Inc.

Documentation built with "jekyll":http://jekyllrb.com, based on the design by the "apache buildr":http://buildr.apache.org project.

If you like this gem, say hi on "twitter":http://twitter.com/#!buhrmii

*as in mostly me.
